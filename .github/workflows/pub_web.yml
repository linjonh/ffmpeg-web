name: "linux-build-deploy-web"
on:
  push:
    branches:
      - master
    paths-ignore:
    #   - .github/workflows/pub_web.yml
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-docs:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      acc_volcan_id: ${{ secrets.ACC_VOLCAN_ID }}
      acc_volcan_key: ${{ secrets.ACC_VOLCAN_KEY }}
      artifact_name: "ffmpeg-docs" # optional, default is artifact
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)
      - name: checkout ffmpeg source and build docs
        run: |
            git clone https://github.com/FFmpeg/FFmpeg.git ffmpeg
            cd ffmpeg
            git checkout release/7.1
            echo "ffmpeg version: $(git rev-parse HEAD)"
            ls -al
            git submodule update --init --recursive
            cd .. && pwd
            chmod +x ./ffmpeg/configure
            bash ./generate-doc.sh ../ffmpeg

      - name: Setup Node.js #node js 上传搜索数据
        uses: actions/setup-node@v4
        with:
          node-version: 23
      - name: Install node dependencies
        run: |
            npm install
            export PATH=`pwd`/node_modules/bower/bin:`pwd`/node_modules/less/bin:$PATH
            make
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - name: Install Python dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            python ./translate.py volcan ${{env.acc_volcan_id}} ${{env.acc_volcan_key}}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./htdocs_cn
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
            # Artifact name  
            name: ${{ env.artifact_name }} # optional, default is artifact
            # A file, directory or wildcard pattern that describes what to upload
            path: ./htdocs_cn 
            # The desired behavior if no files are found using the provided path.
            # Available Options:
            #   warn: Output a warning but do not fail the action
            #   error: Fail the action with an error message
            #   ignore: Do not output any warnings or errors, the action does not fail
            if-no-files-found: warn # optional, default is warn
            # Duration after which artifact will expire in days. 0 means using default retention.
            # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
            retention-days: 90 # optional    
            # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
            compression-level: 0 # optional, default is 6
            # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.
            overwrite: true # optional, default is false
            # If true, hidden files will be included in the artifact. If false, hidden files will be excluded from the artifact.
            include-hidden-files: false # optional, default is false
      

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
